package http_handle

import (
	"encoding/json"
	"fmt"
	"net/http"
	"strconv"
	"strings"

	_ "github.com/Go-SQL-Driver/MySQL"

	"data"
	base_db "db"
)

func StarEvaluateSelf(w http.ResponseWriter, r *http.Request) {
	r.ParseForm()
	testParam := r.URL.Query()["test_param"][0]
	fmt.Println("testParam", userId)

	/**
	底层通过调用multipartReader.ReadForm来解析
	如果文件大小超过maxMemory,则使用临时文件来存储multipart/form中文件数据
	*/
	r.ParseMultipartForm(32 << 20)
	//fmt.Println("r.Form:         ", r.Form)
	//fmt.Println("r.PostForm:     ", r.PostForm)
	//fmt.Println("r.MultiPartForm:", r.MultipartForm)

	form := r.MultipartForm

	imgRealName := ""

	for k, v := range form.File {
		//fmt.Println("value,k,v = ", k, ",", v)
		fmt.Println("getFormData::form.File::k = ", k, ",", len(v))

		for _, value := range v {
			fmt.Println("")
			fmt.Println("=====================getFormData::form.File::FileName = ", value.Filename)
			f, _ := value.Open()
			buf, _ := ioutil.ReadAll(f)
			fileContent := string(buf)
			fmt.Println("=====================getFormData::form.File::fileContent = ")

			md5hash := md5.New()
			io.WriteString(md5hash, fileContent)
			md5Buffer := md5hash.Sum(nil)
			fmt.Println("=================getFormData::form.File::MD5Str = %x", md5Buffer)
			md5Str := hex.EncodeToString(md5Buffer)
			fmt.Println("md5Str = " + md5Str)
			imgRealName = md5Str

			imgFile, err := os.OpenFile("./img_file/"+imgRealName, os.O_WRONLY|os.O_CREATE, 0666)
			defer imgFile.Close()
			if err != nil {
				fmt.Println("open new file error")
				continue
			}
			imgFile.WriteString(fileContent)

			fmt.Println("getFormData::form.File::imgRealName = " + imgRealName)
		}
	}
}
